import asyncio
import logging
from aiogram import Bot, Dispatcher
from config import BOT_TOKEN, CHAT_ID, CHECK_INTERVAL, LOG_FILE
from checker import fetch_tariffs, filter_tariffs, format_tariff

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ---
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(message)s",
    handlers=[
        logging.FileHandler(LOG_FILE),
        logging.StreamHandler()
    ]
)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

last_available = set()

async def check_tariffs():
    global last_available
    while True:
        try:
            logging.info("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API...")
            data = await fetch_tariffs()
            filtered = filter_tariffs(data)

            available_now = {t["id"]: t for t in filtered if t["availability"]}

            new_ids = set(available_now.keys()) - set(last_available)
            if new_ids:
                msg = "üöÄ –ü–æ—è–≤–∏–ª–∏—Å—å –Ω–æ–≤—ã–µ —Ç–∞—Ä–∏—Ñ—ã:\n\n" + "\n\n".join(
										format_tariff(available_now[i]) for i in new_ids
								) + "\n\nüîó GitHub: https://github.com/fxfuren"
                await bot.send_message(CHAT_ID, msg)
                logging.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ {len(new_ids)} –Ω–æ–≤—ã—Ö —Ç–∞—Ä–∏—Ñ–∞—Ö")

            last_available = available_now.keys()

        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞—Ä–∏—Ñ–æ–≤: {e}")

        await asyncio.sleep(CHECK_INTERVAL)

async def run_bot():
    # –°–æ–æ–±—â–∞–µ–º –≤ —á–∞—Ç, —á—Ç–æ –±–æ—Ç —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª
    try:
        await bot.send_message(CHAT_ID, "üü¢ Play2Go Tariff Bot –∑–∞–ø—É—â–µ–Ω. –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤.")
        logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
    except Exception as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

    asyncio.create_task(check_tariffs())
    await dp.start_polling(bot)
